//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Components.BlockMoveStateComponent componentsBlockMoveState { get { return (Components.BlockMoveStateComponent)GetComponent(GameComponentsLookup.ComponentsBlockMoveState); } }
    public bool hasComponentsBlockMoveState { get { return HasComponent(GameComponentsLookup.ComponentsBlockMoveState); } }

    public void AddComponentsBlockMoveState(BlockPosState newValue) {
        var index = GameComponentsLookup.ComponentsBlockMoveState;
        var component = (Components.BlockMoveStateComponent)CreateComponent(index, typeof(Components.BlockMoveStateComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceComponentsBlockMoveState(BlockPosState newValue) {
        var index = GameComponentsLookup.ComponentsBlockMoveState;
        var component = (Components.BlockMoveStateComponent)CreateComponent(index, typeof(Components.BlockMoveStateComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveComponentsBlockMoveState() {
        RemoveComponent(GameComponentsLookup.ComponentsBlockMoveState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherComponentsBlockMoveState;

    public static Entitas.IMatcher<GameEntity> ComponentsBlockMoveState {
        get {
            if (_matcherComponentsBlockMoveState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ComponentsBlockMoveState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherComponentsBlockMoveState = matcher;
            }

            return _matcherComponentsBlockMoveState;
        }
    }
}
