//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ComponentsUpdatePositionListenerComponent componentsUpdatePositionListener { get { return (ComponentsUpdatePositionListenerComponent)GetComponent(GameComponentsLookup.ComponentsUpdatePositionListener); } }
    public bool hasComponentsUpdatePositionListener { get { return HasComponent(GameComponentsLookup.ComponentsUpdatePositionListener); } }

    public void AddComponentsUpdatePositionListener(System.Collections.Generic.List<IComponentsUpdatePositionListener> newValue) {
        var index = GameComponentsLookup.ComponentsUpdatePositionListener;
        var component = (ComponentsUpdatePositionListenerComponent)CreateComponent(index, typeof(ComponentsUpdatePositionListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceComponentsUpdatePositionListener(System.Collections.Generic.List<IComponentsUpdatePositionListener> newValue) {
        var index = GameComponentsLookup.ComponentsUpdatePositionListener;
        var component = (ComponentsUpdatePositionListenerComponent)CreateComponent(index, typeof(ComponentsUpdatePositionListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveComponentsUpdatePositionListener() {
        RemoveComponent(GameComponentsLookup.ComponentsUpdatePositionListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherComponentsUpdatePositionListener;

    public static Entitas.IMatcher<GameEntity> ComponentsUpdatePositionListener {
        get {
            if (_matcherComponentsUpdatePositionListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ComponentsUpdatePositionListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherComponentsUpdatePositionListener = matcher;
            }

            return _matcherComponentsUpdatePositionListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddComponentsUpdatePositionListener(IComponentsUpdatePositionListener value) {
        var listeners = hasComponentsUpdatePositionListener
            ? componentsUpdatePositionListener.value
            : new System.Collections.Generic.List<IComponentsUpdatePositionListener>();
        listeners.Add(value);
        ReplaceComponentsUpdatePositionListener(listeners);
    }

    public void RemoveComponentsUpdatePositionListener(IComponentsUpdatePositionListener value, bool removeComponentWhenEmpty = true) {
        var listeners = componentsUpdatePositionListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveComponentsUpdatePositionListener();
        } else {
            ReplaceComponentsUpdatePositionListener(listeners);
        }
    }
}
