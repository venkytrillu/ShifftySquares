//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Components.UpdatePositionComponent componentsUpdatePosition { get { return (Components.UpdatePositionComponent)GetComponent(GameComponentsLookup.ComponentsUpdatePosition); } }
    public bool hasComponentsUpdatePosition { get { return HasComponent(GameComponentsLookup.ComponentsUpdatePosition); } }

    public void AddComponentsUpdatePosition(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.ComponentsUpdatePosition;
        var component = (Components.UpdatePositionComponent)CreateComponent(index, typeof(Components.UpdatePositionComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceComponentsUpdatePosition(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.ComponentsUpdatePosition;
        var component = (Components.UpdatePositionComponent)CreateComponent(index, typeof(Components.UpdatePositionComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveComponentsUpdatePosition() {
        RemoveComponent(GameComponentsLookup.ComponentsUpdatePosition);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherComponentsUpdatePosition;

    public static Entitas.IMatcher<GameEntity> ComponentsUpdatePosition {
        get {
            if (_matcherComponentsUpdatePosition == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ComponentsUpdatePosition);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherComponentsUpdatePosition = matcher;
            }

            return _matcherComponentsUpdatePosition;
        }
    }
}
